---
- hosts: all
  become: true
  roles:
    - Ketouem.php
    - Ketouem.nginx
    - Ketouem.mysql
    - Ketouem.wordpress
  tasks:
    # PHP
    - name: Add the ondrej PHP PPA
      apt_repository: repo='ppa:ondrej/php'
    - name: Update the apt cache
      apt: update_cache=yes cache_valid_time=3600
    - name: Install required tools
      apt: name={{item}}
      with_items:
        - unzip
    - name: Install PHP
      apt: name={{item}} state=installed
      with_items:
        - php
        - php-fpm
        - php-mysql
        - php-xml
    - name: Remove Apache2 (installed by php)
      apt: name=apache2 state=removed

    # MySQL
    - name: Install MySQL
      apt: name={{item}} state=installed
      with_items:
        - mysql-server-5.6
        - python-mysqldb
    - name: Generate new root password
      command: openssl rand -hex 7 creates=/root/.my.cnf
      register: mysql_new_root_pass
    - name: Remove anonymous users
      mysql_user: name="" state=absent
      when: mysql_new_root_pass.changed
    - name: Remove test database
      mysql_db: name=test state=absent
      when: mysql_new_root_pass.changed
    - name: Output new root password
      debug: msg="New root password is {{mysql_new_root_pass.stdout}}"
      when: mysql_new_root_pass.changed
    - name: Update root password
      mysql_user: name=root host={{item}} password={{mysql_new_root_pass.stdout}}
      with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost
      when: mysql_new_root_pass.changed
    - name: Create my.cnf
      template: src=templates/mysql/my.cnf dest=/root/.my.cnf
      when: mysql_new_root_pass.changed

    # NGinx
    - name: Install nginx
      apt: name=nginx state=installed
    - name: Start nginx
      service: name=nginx state=running
    - name: Create nginx config
      template: src=templates/nginx/default dest=/etc/nginx/sites-available/default
      notify: restart nginx

    # Wordpress
    - name: Copy wordpress.zip into /tmp and unarchive it
      unarchive: src=files/wordpress.zip dest=/tmp creates=/tmp/wordpress/wp-settings.php
    - name: Create project folder
      file: dest=/var/www/book.example.com state=directory
    - name: Copy WordPress files
      command: cp -a /tmp/wordpress/. /var/www/book.example.com creates=/var/www/book.example.com/wp-settings.php
    - name: Create Wordpress MySQL database
      mysql_db: name=wordpress state=present
    - name: Create WordPress MySQL user
      mysql_user: name=wordpress host=localhost password=bananas priv=wordpress.*:ALL
    - name: Create wp-config
      template: src=templates/wordpress/wp-config.php dest=/var/www/book.example.com/wp-config.php
    - name: Does the database exist ?
      command: mysql -u root wordpress -e "SELECT ID FROM wordpress.wp_users LIMIT 1;"
      register: db_exist
      ignore_errors: true
      changed_when: false
    - name: Copy Wordpress DB
      copy: src=files/wp-database.sql dest=/tmp/wp-database.sql
      when: db_exist.rc > 0
    - name: Import Wordpress DB
      mysql_db: target=/tmp/wp-database.sql state=import name=wordpress
      when: db_exist.rc > 0

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted
